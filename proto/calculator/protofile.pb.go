// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: protofile.proto

package calculator

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CalculatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int64 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B int64 `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *CalculatorRequest) Reset() {
	*x = CalculatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorRequest) ProtoMessage() {}

func (x *CalculatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorRequest.ProtoReflect.Descriptor instead.
func (*CalculatorRequest) Descriptor() ([]byte, []int) {
	return file_protofile_proto_rawDescGZIP(), []int{0}
}

func (x *CalculatorRequest) GetA() int64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *CalculatorRequest) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

type CalculatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CalculatorResponse) Reset() {
	*x = CalculatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorResponse) ProtoMessage() {}

func (x *CalculatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorResponse.ProtoReflect.Descriptor instead.
func (*CalculatorResponse) Descriptor() ([]byte, []int) {
	return file_protofile_proto_rawDescGZIP(), []int{1}
}

func (x *CalculatorResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type GetFibonacciRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *GetFibonacciRequest) Reset() {
	*x = GetFibonacciRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFibonacciRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFibonacciRequest) ProtoMessage() {}

func (x *GetFibonacciRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFibonacciRequest.ProtoReflect.Descriptor instead.
func (*GetFibonacciRequest) Descriptor() ([]byte, []int) {
	return file_protofile_proto_rawDescGZIP(), []int{2}
}

func (x *GetFibonacciRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetFibonacciResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *GetFibonacciResponse) Reset() {
	*x = GetFibonacciResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFibonacciResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFibonacciResponse) ProtoMessage() {}

func (x *GetFibonacciResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFibonacciResponse.ProtoReflect.Descriptor instead.
func (*GetFibonacciResponse) Descriptor() ([]byte, []int) {
	return file_protofile_proto_rawDescGZIP(), []int{3}
}

func (x *GetFibonacciResponse) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type AAA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Na1 int64 `protobuf:"varint,1,opt,name=na1,proto3" json:"na1,omitempty"`
	Na2 int64 `protobuf:"varint,2,opt,name=na2,proto3" json:"na2,omitempty"`
}

func (x *AAA) Reset() {
	*x = AAA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofile_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AAA) ProtoMessage() {}

func (x *AAA) ProtoReflect() protoreflect.Message {
	mi := &file_protofile_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AAA.ProtoReflect.Descriptor instead.
func (*AAA) Descriptor() ([]byte, []int) {
	return file_protofile_proto_rawDescGZIP(), []int{4}
}

func (x *AAA) GetNa1() int64 {
	if x != nil {
		return x.Na1
	}
	return 0
}

func (x *AAA) GetNa2() int64 {
	if x != nil {
		return x.Na2
	}
	return 0
}

type ToBeRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N1 int64 `protobuf:"varint,1,opt,name=n1,proto3" json:"n1,omitempty"`
	N2 int64 `protobuf:"varint,2,opt,name=n2,proto3" json:"n2,omitempty"`
}

func (x *ToBeRef) Reset() {
	*x = ToBeRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofile_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToBeRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToBeRef) ProtoMessage() {}

func (x *ToBeRef) ProtoReflect() protoreflect.Message {
	mi := &file_protofile_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToBeRef.ProtoReflect.Descriptor instead.
func (*ToBeRef) Descriptor() ([]byte, []int) {
	return file_protofile_proto_rawDescGZIP(), []int{5}
}

func (x *ToBeRef) GetN1() int64 {
	if x != nil {
		return x.N1
	}
	return 0
}

func (x *ToBeRef) GetN2() int64 {
	if x != nil {
		return x.N2
	}
	return 0
}

type Temp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N []*AAA `protobuf:"bytes,1,rep,name=n,proto3" json:"n,omitempty"`
}

func (x *Temp) Reset() {
	*x = Temp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofile_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Temp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Temp) ProtoMessage() {}

func (x *Temp) ProtoReflect() protoreflect.Message {
	mi := &file_protofile_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Temp.ProtoReflect.Descriptor instead.
func (*Temp) Descriptor() ([]byte, []int) {
	return file_protofile_proto_rawDescGZIP(), []int{6}
}

func (x *Temp) GetN() []*AAA {
	if x != nil {
		return x.N
	}
	return nil
}

var File_protofile_proto protoreflect.FileDescriptor

var file_protofile_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x2f, 0x0a,
	0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x61,
	0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x62, 0x22, 0x2c,
	0x0a, 0x12, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x27, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x62, 0x6f, 0x6e, 0x61, 0x63, 0x63, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x28, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x62, 0x6f,
	0x6e, 0x61, 0x63, 0x63, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22,
	0x29, 0x0a, 0x03, 0x41, 0x41, 0x41, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x61, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x61, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x61, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x61, 0x32, 0x22, 0x29, 0x0a, 0x07, 0x54, 0x6f,
	0x42, 0x65, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x6e, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x6e, 0x32, 0x22, 0x25, 0x0a, 0x04, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1d, 0x0a,
	0x01, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x41, 0x41, 0x52, 0x01, 0x6e, 0x32, 0xe3, 0x01, 0x0a,
	0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x46, 0x0a, 0x03, 0x53, 0x75, 0x6d, 0x12, 0x1d, 0x2e, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x54, 0x65,
	0x73, 0x74, 0x12, 0x13, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x54, 0x6f, 0x42, 0x65, 0x52, 0x65, 0x66, 0x1a, 0x10, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x62, 0x6f, 0x6e, 0x61, 0x63, 0x63, 0x69, 0x12, 0x1f, 0x2e, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x62, 0x6f,
	0x6e, 0x61, 0x63, 0x63, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x62,
	0x6f, 0x6e, 0x61, 0x63, 0x63, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x42, 0x12, 0x5a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protofile_proto_rawDescOnce sync.Once
	file_protofile_proto_rawDescData = file_protofile_proto_rawDesc
)

func file_protofile_proto_rawDescGZIP() []byte {
	file_protofile_proto_rawDescOnce.Do(func() {
		file_protofile_proto_rawDescData = protoimpl.X.CompressGZIP(file_protofile_proto_rawDescData)
	})
	return file_protofile_proto_rawDescData
}

var file_protofile_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_protofile_proto_goTypes = []interface{}{
	(*CalculatorRequest)(nil),    // 0: calculator.CalculatorRequest
	(*CalculatorResponse)(nil),   // 1: calculator.CalculatorResponse
	(*GetFibonacciRequest)(nil),  // 2: calculator.GetFibonacciRequest
	(*GetFibonacciResponse)(nil), // 3: calculator.GetFibonacciResponse
	(*AAA)(nil),                  // 4: calculator.AAA
	(*ToBeRef)(nil),              // 5: calculator.ToBeRef
	(*Temp)(nil),                 // 6: calculator.Temp
}
var file_protofile_proto_depIdxs = []int32{
	4, // 0: calculator.Temp.n:type_name -> calculator.AAA
	0, // 1: calculator.CalculatorService.Sum:input_type -> calculator.CalculatorRequest
	5, // 2: calculator.CalculatorService.Test:input_type -> calculator.ToBeRef
	2, // 3: calculator.CalculatorService.GetFibonacci:input_type -> calculator.GetFibonacciRequest
	1, // 4: calculator.CalculatorService.Sum:output_type -> calculator.CalculatorResponse
	6, // 5: calculator.CalculatorService.Test:output_type -> calculator.Temp
	3, // 6: calculator.CalculatorService.GetFibonacci:output_type -> calculator.GetFibonacciResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protofile_proto_init() }
func file_protofile_proto_init() {
	if File_protofile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protofile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFibonacciRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFibonacciResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofile_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AAA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofile_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToBeRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofile_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Temp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protofile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protofile_proto_goTypes,
		DependencyIndexes: file_protofile_proto_depIdxs,
		MessageInfos:      file_protofile_proto_msgTypes,
	}.Build()
	File_protofile_proto = out.File
	file_protofile_proto_rawDesc = nil
	file_protofile_proto_goTypes = nil
	file_protofile_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *CalculatorRequest, opts ...grpc.CallOption) (*CalculatorResponse, error)
	Test(ctx context.Context, in *ToBeRef, opts ...grpc.CallOption) (*Temp, error)
	GetFibonacci(ctx context.Context, in *GetFibonacciRequest, opts ...grpc.CallOption) (CalculatorService_GetFibonacciClient, error)
}

type calculatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculatorServiceClient(cc grpc.ClientConnInterface) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *CalculatorRequest, opts ...grpc.CallOption) (*CalculatorResponse, error) {
	out := new(CalculatorResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) Test(ctx context.Context, in *ToBeRef, opts ...grpc.CallOption) (*Temp, error) {
	out := new(Temp)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) GetFibonacci(ctx context.Context, in *GetFibonacciRequest, opts ...grpc.CallOption) (CalculatorService_GetFibonacciClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/GetFibonacci", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceGetFibonacciClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_GetFibonacciClient interface {
	Recv() (*GetFibonacciResponse, error)
	grpc.ClientStream
}

type calculatorServiceGetFibonacciClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceGetFibonacciClient) Recv() (*GetFibonacciResponse, error) {
	m := new(GetFibonacciResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *CalculatorRequest) (*CalculatorResponse, error)
	Test(context.Context, *ToBeRef) (*Temp, error)
	GetFibonacci(*GetFibonacciRequest, CalculatorService_GetFibonacciServer) error
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Sum(context.Context, *CalculatorRequest) (*CalculatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServiceServer) Test(context.Context, *ToBeRef) (*Temp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}
func (*UnimplementedCalculatorServiceServer) GetFibonacci(*GetFibonacciRequest, CalculatorService_GetFibonacciServer) error {
	return status.Errorf(codes.Unimplemented, "method GetFibonacci not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*CalculatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToBeRef)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Test(ctx, req.(*ToBeRef))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_GetFibonacci_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetFibonacciRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).GetFibonacci(m, &calculatorServiceGetFibonacciServer{stream})
}

type CalculatorService_GetFibonacciServer interface {
	Send(*GetFibonacciResponse) error
	grpc.ServerStream
}

type calculatorServiceGetFibonacciServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceGetFibonacciServer) Send(m *GetFibonacciResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
		{
			MethodName: "Test",
			Handler:    _CalculatorService_Test_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetFibonacci",
			Handler:       _CalculatorService_GetFibonacci_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protofile.proto",
}
